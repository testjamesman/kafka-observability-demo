services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "orders:1:1,payments:1:1,inventory_updates:1:1,user_activity:1:1"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:29092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  producer:
    container_name: producer
    build:
      context: ./producer
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKER: "kafka:29092"
      MESSAGES_PER_SECOND: "1"
      ERROR_RATE: "0.0"
      DD_AGENT_HOST: "dd-agent"
      #DD_SERVICE: "kafka-demo-producer"
      DD_ENV: "kafka"
      DD_LOGS_INJECTION: "true"
      DD_TRACE_DEBUG: "false"
      DD_DATA_STREAMS_ENABLED: "true"
      DD_KAFKA_PROPAGATION_ENABLED: "true"
      DD_KAFKA_SERVICE: "kafka-demo-producer"

  consumer:
    container_name: consumer
    build:
      context: ./consumer
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKER: "kafka:29092"
      DD_AGENT_HOST: "dd-agent"
      #DD_SERVICE: "kafka-demo-consumer"
      DD_ENV: "kafka"
      DD_LOGS_INJECTION: "true"
      DD_TRACE_DEBUG:  "false"
      DD_DATA_STREAMS_ENABLED: "true"
      DD_KAFKA_PROPAGATION_ENABLED: "true"
      DD_KAFKA_SERVICE: "kafka-demo-consumer"

  dd-agent:
    image: gcr.io/datadoghq/agent:7
    container_name: dd-agent
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=datadoghq.com
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
      - DD_ENV=kafka
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_APM_RECEIVER_SOCKET=/var/run/datadog/apm.socket
      - DD_DOGSTATSD_SOCKET=/var/run/datadog/dsd.socket
      - DD_LOGS_ENABLED=true
      - DD_LOG_LEVEL=info
      - DD_LOGS_CONFIG_AUTO_MULTI_LINE_DETECTION=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_CONTAINER_EXCLUDE_LOGS=name:dd-agent
      - DD_APM_FILTER_TAGS_REJECT="component:jinja2"
    volumes:
      - /var/run/datadog:/var/run/datadog
      - /opt/datadog-agent/run:/opt/datadog-agent/run:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
